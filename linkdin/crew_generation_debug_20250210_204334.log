2025-02-10 20:43:34,335 - root - [INFO] - ai_crew_generator.py:setup_logging:53 - Logging to files:
2025-02-10 20:43:34,336 - root - [INFO] - ai_crew_generator.py:setup_logging:54 -   Debug log: linkdin/crew_generation_debug_20250210_204334.log
2025-02-10 20:43:34,336 - root - [INFO] - ai_crew_generator.py:setup_logging:55 -   Info log: linkdin/crew_generation_20250210_204334.log
2025-02-10 20:43:34,340 - main - [INFO] - ai_crew_generator.py:main:804 - ==================================================
2025-02-10 20:43:34,340 - main - [INFO] - ai_crew_generator.py:main:805 - Starting CrewAI App Generation Process
2025-02-10 20:43:34,340 - main - [INFO] - ai_crew_generator.py:main:806 - ==================================================
2025-02-10 20:43:34,341 - main - [INFO] - ai_crew_generator.py:main:807 - Output Directory: linkdin
2025-02-10 20:43:34,341 - main - [INFO] - ai_crew_generator.py:main:808 - JSON Configuration Path: /Users/varunisrani/Desktop/CrewAI-Studio/linkdinpost.json
2025-02-10 20:43:34,341 - main - [INFO] - ai_crew_generator.py:main:838 - Loading JSON configuration...
2025-02-10 20:43:34,343 - main - [DEBUG] - ai_crew_generator.py:main:841 - Loaded JSON content: {
  "Crew creation details": {
    "Name": "LinkedInPostGenerator",
    "Process": "sequence",
    "Agents": [
      "InputAnalysisAgent",
      "NLPAgent",
      "SentimentAnalysisAgent",
      "HashtagGeneratorAgent",
      "ContentAnalysisAgent",
      "DraftReviewAgent",
      "FinalOutputAgent",
      "PerformanceMonitoringAgent"
    ],
    "Tasks": [
      "AnalyzeInput",
      "GeneratePost",
      "AnalyzeSentiment",
      "GenerateHashtags",
      "AnalyzeContent",
      "ReviewDraft",
      "GenerateFinalOutput",
      "MonitorPerformance"
    ],
    "Manager LLM": "GPT-4",
    "Manager Agent": "AIManager",
    "Verbose": false,
    "Memory": "enabled",
    "Cache": "enabled",
    "Planning": "iterative",
    "Max req/min": 1000
  },
  "Tools": [],
  "Agents": [
    {
      "Create agent": "InputAnalysisAgent",
      "Role": "Analyze user input for content generation",
      "Backstory": "Experienced in data collection and user interaction",
      "Goal": "To gather and prepare data for post generation",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    },
    {
      "Create agent": "NLPAgent",
      "Role": "Generate coherent post drafts",
      "Backstory": "Specializes in natural language processing",
      "Goal": "To produce engaging and relevant post drafts",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.7,
      "Max iteration": 5,
      "Select tools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "Create agent": "SentimentAnalysisAgent",
      "Role": "Analyze emotional tone of content",
      "Backstory": "Expert in sentiment analysis",
      "Goal": "Ensure alignment with user intent",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    },
    {
      "Create agent": "HashtagGeneratorAgent",
      "Role": "Suggest relevant hashtags",
      "Backstory": "Knowledgeable in social media trends",
      "Goal": "Enhance post visibility",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    },
    {
      "Create agent": "ContentAnalysisAgent",
      "Role": "Evaluate clarity and engagement of posts",
      "Backstory": "Skilled in content optimization",
      "Goal": "Refine the post for publishing",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "Create agent": "DraftReviewAgent",
      "Role": "Facilitate user review of draft posts",
      "Backstory": "Experienced in user feedback processes",
      "Goal": "Iterate on user feedback to improve drafts",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    },
    {
      "Create agent": "FinalOutputAgent",
      "Role": "Compile final post for publication",
      "Backstory": "Expert in content management",
      "Goal": "Ensure readiness of posts for LinkedIn",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    },
    {
      "Create agent": "PerformanceMonitoringAgent",
      "Role": "Track engagement metrics",
      "Backstory": "Analytical background in social media",
      "Goal": "Optimize future content strategies",
      "Allow delegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "Max iteration": 5,
      "Select tools": [
        "CustomApiTool"
      ]
    }
  ],
  "Tasks": [
    {
      "Create task": "AnalyzeInput",
      "Description": "Collect and analyze user-provided data",
      "Expected output": "Processed user input for further use",
      "Agent": "InputAnalysisAgent",
      "Async execution": "no",
      "Context from async tasks": "none",
      "Context from sync tasks": "none"
    },
    {
      "Create task": "GeneratePost",
      "Description": "Generate coherent post drafts",
      "Expected output": "Draft post ready for review",
      "Agent": "NLPAgent",
      "Async execution": "no",
      "Context from async tasks": "Processed user input",
      "Context from sync tasks": "none"
    },
    {
      "Create task": "AnalyzeSentiment",
      "Description": "Assess the emotional tone of the content",
      "Expected output": "Sentiment analysis report",
      "Agent": "SentimentAnalysisAgent",
      "Async execution": "no",
      "Context from async tasks": "Draft post",
      "Context from sync tasks": "none"
    },
    {
      "Create task": "GenerateHashtags",
      "Description": "Suggest relevant hashtags for the post",
      "Expected output": "List of hashtags",
      "Agent": "HashtagGeneratorAgent",
      "Async execution": "no",
      "Context from async tasks": "Draft post",
      "Context from sync tasks": "none"
    },
    {
      "Create task": "AnalyzeContent",
      "Description": "Evaluate the generated post for clarity and engagement",
      "Expected output": "Content analysis report",
      "Agent": "ContentAnalysisAgent",
      "Async execution": "no",
      "Context from async tasks": "Draft post, Hashtags",
      "Context from sync tasks": "none"
    },
    {
      "Create task": "ReviewDraft",
      "Description": "Facilitate user review of draft posts",
      "Expected output": "User feedback on draft",
      "Agent": "DraftReviewAgent",
      "Async execution": "yes",
      "Context from async tasks": "Content analysis report",
      "Context from sync tasks": "Draft post"
    },
    {
      "Create task": "GenerateFinalOutput",
      "Description": "Compile the approved draft and hashtags into a final post",
      "Expected output": "Final post ready for publication",
      "Agent": "FinalOutputAgent",
      "Async execution": "no",
      "Context from async tasks": "User feedback",
      "Context from sync tasks": "Draft post"
    },
    {
      "Create task": "MonitorPerformance",
      "Description": "Track post engagement metrics",
      "Expected output": "Performance report",
      "Agent": "PerformanceMonitoringAgent",
      "Async execution": "yes",
      "Context from async tasks": "Final post",
      "Context from sync tasks": "none"
    }
  ]
}
2025-02-10 20:43:34,344 - main - [INFO] - ai_crew_generator.py:main:844 - Creating AICrewGenerator instance...
2025-02-10 20:43:34,344 - AICrewGenerator - [INFO] - ai_crew_generator.py:__init__:63 - ==================================================
2025-02-10 20:43:34,344 - AICrewGenerator - [INFO] - ai_crew_generator.py:__init__:64 - Initializing AICrewGenerator
2025-02-10 20:43:34,344 - AICrewGenerator - [INFO] - ai_crew_generator.py:__init__:65 - ==================================================
2025-02-10 20:43:34,344 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:__init__:67 - Setting up OpenAI LLM with model: gpt-4o-mini
2025-02-10 20:43:34,357 - httpx - [DEBUG] - _config.py:load_ssl_context:82 - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-02-10 20:43:34,360 - httpx - [DEBUG] - _config.py:load_ssl_context_verify:148 - load_verify_locations cafile='/Users/varunisrani/Desktop/CrewAI-Studio/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2025-02-10 20:43:34,379 - httpx - [DEBUG] - _config.py:load_ssl_context:82 - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-02-10 20:43:34,380 - httpx - [DEBUG] - _config.py:load_ssl_context_verify:148 - load_verify_locations cafile='/Users/varunisrani/Desktop/CrewAI-Studio/venv/lib/python3.11/site-packages/certifi/cacert.pem'
2025-02-10 20:43:34,389 - AICrewGenerator - [INFO] - ai_crew_generator.py:__init__:72 - Successfully initialized OpenAI LLM
2025-02-10 20:43:34,389 - main - [INFO] - ai_crew_generator.py:main:848 - Normalizing JSON format...
2025-02-10 20:43:34,389 - main - [DEBUG] - ai_crew_generator.py:main:849 - Starting JSON normalization process
2025-02-10 20:43:34,389 - AICrewGenerator - [INFO] - ai_crew_generator.py:normalize_json_input:628 - Normalizing JSON input format
2025-02-10 20:43:34,389 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:normalize_json_input:699 - Sending normalization prompt to OpenAI
2025-02-10 20:43:34,395 - openai._base_client - [DEBUG] - _base_client.py:_build_request:453 - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n        Transform this JSON configuration into the standard CrewAI format.\n        Input JSON:\n        {\n  "Crew creation details": {\n    "Name": "LinkedInPostGenerator",\n    "Process": "sequence",\n    "Agents": [\n      "InputAnalysisAgent",\n      "NLPAgent",\n      "SentimentAnalysisAgent",\n      "HashtagGeneratorAgent",\n      "ContentAnalysisAgent",\n      "DraftReviewAgent",\n      "FinalOutputAgent",\n      "PerformanceMonitoringAgent"\n    ],\n    "Tasks": [\n      "AnalyzeInput",\n      "GeneratePost",\n      "AnalyzeSentiment",\n      "GenerateHashtags",\n      "AnalyzeContent",\n      "ReviewDraft",\n      "GenerateFinalOutput",\n      "MonitorPerformance"\n    ],\n    "Manager LLM": "GPT-4",\n    "Manager Agent": "AIManager",\n    "Verbose": false,\n    "Memory": "enabled",\n    "Cache": "enabled",\n    "Planning": "iterative",\n    "Max req/min": 1000\n  },\n  "Tools": [],\n  "Agents": [\n    {\n      "Create agent": "InputAnalysisAgent",\n      "Role": "Analyze user input for content generation",\n      "Backstory": "Experienced in data collection and user interaction",\n      "Goal": "To gather and prepare data for post generation",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    },\n    {\n      "Create agent": "NLPAgent",\n      "Role": "Generate coherent post drafts",\n      "Backstory": "Specializes in natural language processing",\n      "Goal": "To produce engaging and relevant post drafts",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.7,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomCodeInterpreterTool"\n      ]\n    },\n    {\n      "Create agent": "SentimentAnalysisAgent",\n      "Role": "Analyze emotional tone of content",\n      "Backstory": "Expert in sentiment analysis",\n      "Goal": "Ensure alignment with user intent",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    },\n    {\n      "Create agent": "HashtagGeneratorAgent",\n      "Role": "Suggest relevant hashtags",\n      "Backstory": "Knowledgeable in social media trends",\n      "Goal": "Enhance post visibility",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    },\n    {\n      "Create agent": "ContentAnalysisAgent",\n      "Role": "Evaluate clarity and engagement of posts",\n      "Backstory": "Skilled in content optimization",\n      "Goal": "Refine the post for publishing",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomCodeInterpreterTool"\n      ]\n    },\n    {\n      "Create agent": "DraftReviewAgent",\n      "Role": "Facilitate user review of draft posts",\n      "Backstory": "Experienced in user feedback processes",\n      "Goal": "Iterate on user feedback to improve drafts",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    },\n    {\n      "Create agent": "FinalOutputAgent",\n      "Role": "Compile final post for publication",\n      "Backstory": "Expert in content management",\n      "Goal": "Ensure readiness of posts for LinkedIn",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    },\n    {\n      "Create agent": "PerformanceMonitoringAgent",\n      "Role": "Track engagement metrics",\n      "Backstory": "Analytical background in social media",\n      "Goal": "Optimize future content strategies",\n      "Allow delegation": "yes",\n      "Verbose": false,\n      "Cache": "enabled",\n      "LLM": "GPT-4",\n      "Temperature": 0.5,\n      "Max iteration": 5,\n      "Select tools": [\n        "CustomApiTool"\n      ]\n    }\n  ],\n  "Tasks": [\n    {\n      "Create task": "AnalyzeInput",\n      "Description": "Collect and analyze user-provided data",\n      "Expected output": "Processed user input for further use",\n      "Agent": "InputAnalysisAgent",\n      "Async execution": "no",\n      "Context from async tasks": "none",\n      "Context from sync tasks": "none"\n    },\n    {\n      "Create task": "GeneratePost",\n      "Description": "Generate coherent post drafts",\n      "Expected output": "Draft post ready for review",\n      "Agent": "NLPAgent",\n      "Async execution": "no",\n      "Context from async tasks": "Processed user input",\n      "Context from sync tasks": "none"\n    },\n    {\n      "Create task": "AnalyzeSentiment",\n      "Description": "Assess the emotional tone of the content",\n      "Expected output": "Sentiment analysis report",\n      "Agent": "SentimentAnalysisAgent",\n      "Async execution": "no",\n      "Context from async tasks": "Draft post",\n      "Context from sync tasks": "none"\n    },\n    {\n      "Create task": "GenerateHashtags",\n      "Description": "Suggest relevant hashtags for the post",\n      "Expected output": "List of hashtags",\n      "Agent": "HashtagGeneratorAgent",\n      "Async execution": "no",\n      "Context from async tasks": "Draft post",\n      "Context from sync tasks": "none"\n    },\n    {\n      "Create task": "AnalyzeContent",\n      "Description": "Evaluate the generated post for clarity and engagement",\n      "Expected output": "Content analysis report",\n      "Agent": "ContentAnalysisAgent",\n      "Async execution": "no",\n      "Context from async tasks": "Draft post, Hashtags",\n      "Context from sync tasks": "none"\n    },\n    {\n      "Create task": "ReviewDraft",\n      "Description": "Facilitate user review of draft posts",\n      "Expected output": "User feedback on draft",\n      "Agent": "DraftReviewAgent",\n      "Async execution": "yes",\n      "Context from async tasks": "Content analysis report",\n      "Context from sync tasks": "Draft post"\n    },\n    {\n      "Create task": "GenerateFinalOutput",\n      "Description": "Compile the approved draft and hashtags into a final post",\n      "Expected output": "Final post ready for publication",\n      "Agent": "FinalOutputAgent",\n      "Async execution": "no",\n      "Context from async tasks": "User feedback",\n      "Context from sync tasks": "Draft post"\n    },\n    {\n      "Create task": "MonitorPerformance",\n      "Description": "Track post engagement metrics",\n      "Expected output": "Performance report",\n      "Agent": "PerformanceMonitoringAgent",\n      "Async execution": "yes",\n      "Context from async tasks": "Final post",\n      "Context from sync tasks": "none"\n    }\n  ]\n}\n        \n        Convert it to match this exact structure:\n        {\n            "CrewCreationDetails": {\n                "Name": "string",\n                "Process": "sequence/horizontal",\n                "Agents": ["list of agent names"],\n                "Tasks": ["list of task names"],\n                "ManagerLLM": "model name",\n                "ManagerAgent": "agent name",\n                "Verbose": boolean,\n                "Memory": "enabled/disabled",\n                "Cache": "enabled/disabled",\n                "Planning": "string",\n                "MaxReqMin": number\n            },\n            "Tools": [\n                {\n                    "tool_id": "string",\n                    "name": "string",\n                    "type": "string",\n                    "description": "string",\n                    "availability": boolean\n                }\n            ],\n            "Agents": [\n                {\n                    "CreateAgent": "string",\n                    "Role": "string",\n                    "Backstory": "string",\n                    "Goal": "string",\n                    "AllowDelegation": "yes/no",\n                    "Verbose": boolean,\n                    "Cache": "enabled/disabled",\n                    "LLM": "model name",\n                    "Temperature": number,\n                    "MaxIteration": number,\n                    "SelectTools": ["list of tool names"]\n                }\n            ],\n            "Tasks": [\n                {\n                    "CreateTask": "string",\n                    "Description": "string",\n                    "ExpectedOutput": "string",\n                    "Agent": "string",\n                    "AsyncExecution": boolean,\n                    "ContextFromAsyncTasks": "string",\n                    "ContextFromSyncTasks": "string"\n                }\n            ]\n        }\n        \n        Rules:\n        1. Map similar fields to their standard names (e.g., "Crew creation details" -> "CrewCreationDetails")\n        2. Convert values to appropriate types (boolean, number, string)\n        3. Ensure all required fields are present\n        4. Keep the original data and intent while normalizing the format\n        5. If a field doesn\'t exist in input, use reasonable defaults\n        \n        Return ONLY the normalized JSON without any additional text or explanation.\n        The response should be a valid JSON object that can be parsed directly.\n        ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'n': 1, 'stream': False, 'temperature': 0.7}}
2025-02-10 20:43:34,396 - openai._base_client - [DEBUG] - _base_client.py:_request:993 - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-02-10 20:43:34,397 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-02-10 20:43:34,437 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x170c9aa50>
2025-02-10 20:43:34,437 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x171a136e0> server_hostname='api.openai.com' timeout=None
2025-02-10 20:43:34,449 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x14f8bfb10>
2025-02-10 20:43:34,449 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - send_request_headers.started request=<Request [b'POST']>
2025-02-10 20:43:34,449 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - send_request_headers.complete
2025-02-10 20:43:34,449 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - send_request_body.started request=<Request [b'POST']>
2025-02-10 20:43:34,449 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - send_request_body.complete
2025-02-10 20:43:34,450 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - receive_response_headers.started request=<Request [b'POST']>
2025-02-10 20:44:01,414 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 10 Feb 2025 15:14:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-pfwpx0yphplkvkhph5n6lgvi'), (b'openai-processing-ms', b'26271'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3997602'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'35ms'), (b'x-request-id', b'req_8efef6c74a29a3d644b97d9321601752'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=z97Nc5lqC_ipPW9rpn8h7GxmUKTW.vUtO15RV9Am3Jk-1739200441-1.0.1.1-bEbR2o99ZayzmV9_xrhhUaia6feW8clHuVeYBnM6HCKfD5wP6pJ_qHAFgl5KI0wDt_9eR_pN0Rl0jn_5htjOYw; path=/; expires=Mon, 10-Feb-25 15:44:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ZUHMA7LYnN5vekfdiLpANg5TbXsTwL29YxdosdB28o4-1739200441432-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'90fd0b3e8a290337-AMD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-02-10 20:44:01,419 - httpx - [INFO] - _client.py:_send_single_request:1038 - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-02-10 20:44:01,420 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - receive_response_body.started request=<Request [b'POST']>
2025-02-10 20:44:01,421 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - receive_response_body.complete
2025-02-10 20:44:01,421 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - response_closed.started
2025-02-10 20:44:01,421 - httpcore.http11 - [DEBUG] - _trace.py:trace:47 - response_closed.complete
2025-02-10 20:44:01,422 - openai._base_client - [DEBUG] - _base_client.py:_request:1032 - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 10 Feb 2025 15:14:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-pfwpx0yphplkvkhph5n6lgvi'), ('openai-processing-ms', '26271'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3997602'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '35ms'), ('x-request-id', 'req_8efef6c74a29a3d644b97d9321601752'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=z97Nc5lqC_ipPW9rpn8h7GxmUKTW.vUtO15RV9Am3Jk-1739200441-1.0.1.1-bEbR2o99ZayzmV9_xrhhUaia6feW8clHuVeYBnM6HCKfD5wP6pJ_qHAFgl5KI0wDt_9eR_pN0Rl0jn_5htjOYw; path=/; expires=Mon, 10-Feb-25 15:44:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ZUHMA7LYnN5vekfdiLpANg5TbXsTwL29YxdosdB28o4-1739200441432-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '90fd0b3e8a290337-AMD'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-02-10 20:44:01,423 - openai._base_client - [DEBUG] - _base_client.py:_request:1040 - request_id: req_8efef6c74a29a3d644b97d9321601752
2025-02-10 20:44:01,458 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:normalize_json_input:703 - Raw OpenAI response: content='```json\n{\n    "CrewCreationDetails": {\n        "Name": "LinkedInPostGenerator",\n        "Process": "sequence",\n        "Agents": [\n            "InputAnalysisAgent",\n            "NLPAgent",\n            "SentimentAnalysisAgent",\n            "HashtagGeneratorAgent",\n            "ContentAnalysisAgent",\n            "DraftReviewAgent",\n            "FinalOutputAgent",\n            "PerformanceMonitoringAgent"\n        ],\n        "Tasks": [\n            "AnalyzeInput",\n            "GeneratePost",\n            "AnalyzeSentiment",\n            "GenerateHashtags",\n            "AnalyzeContent",\n            "ReviewDraft",\n            "GenerateFinalOutput",\n            "MonitorPerformance"\n        ],\n        "ManagerLLM": "GPT-4",\n        "ManagerAgent": "AIManager",\n        "Verbose": false,\n        "Memory": "enabled",\n        "Cache": "enabled",\n        "Planning": "iterative",\n        "MaxReqMin": 1000\n    },\n    "Tools": [],\n    "Agents": [\n        {\n            "CreateAgent": "InputAnalysisAgent",\n            "Role": "Analyze user input for content generation",\n            "Backstory": "Experienced in data collection and user interaction",\n            "Goal": "To gather and prepare data for post generation",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        },\n        {\n            "CreateAgent": "NLPAgent",\n            "Role": "Generate coherent post drafts",\n            "Backstory": "Specializes in natural language processing",\n            "Goal": "To produce engaging and relevant post drafts",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.7,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomCodeInterpreterTool"\n            ]\n        },\n        {\n            "CreateAgent": "SentimentAnalysisAgent",\n            "Role": "Analyze emotional tone of content",\n            "Backstory": "Expert in sentiment analysis",\n            "Goal": "Ensure alignment with user intent",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        },\n        {\n            "CreateAgent": "HashtagGeneratorAgent",\n            "Role": "Suggest relevant hashtags",\n            "Backstory": "Knowledgeable in social media trends",\n            "Goal": "Enhance post visibility",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        },\n        {\n            "CreateAgent": "ContentAnalysisAgent",\n            "Role": "Evaluate clarity and engagement of posts",\n            "Backstory": "Skilled in content optimization",\n            "Goal": "Refine the post for publishing",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomCodeInterpreterTool"\n            ]\n        },\n        {\n            "CreateAgent": "DraftReviewAgent",\n            "Role": "Facilitate user review of draft posts",\n            "Backstory": "Experienced in user feedback processes",\n            "Goal": "Iterate on user feedback to improve drafts",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        },\n        {\n            "CreateAgent": "FinalOutputAgent",\n            "Role": "Compile final post for publication",\n            "Backstory": "Expert in content management",\n            "Goal": "Ensure readiness of posts for LinkedIn",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        },\n        {\n            "CreateAgent": "PerformanceMonitoringAgent",\n            "Role": "Track engagement metrics",\n            "Backstory": "Analytical background in social media",\n            "Goal": "Optimize future content strategies",\n            "AllowDelegation": "yes",\n            "Verbose": false,\n            "Cache": "enabled",\n            "LLM": "GPT-4",\n            "Temperature": 0.5,\n            "MaxIteration": 5,\n            "SelectTools": [\n                "CustomApiTool"\n            ]\n        }\n    ],\n    "Tasks": [\n        {\n            "CreateTask": "AnalyzeInput",\n            "Description": "Collect and analyze user-provided data",\n            "ExpectedOutput": "Processed user input for further use",\n            "Agent": "InputAnalysisAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "none",\n            "ContextFromSyncTasks": "none"\n        },\n        {\n            "CreateTask": "GeneratePost",\n            "Description": "Generate coherent post drafts",\n            "ExpectedOutput": "Draft post ready for review",\n            "Agent": "NLPAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "Processed user input",\n            "ContextFromSyncTasks": "none"\n        },\n        {\n            "CreateTask": "AnalyzeSentiment",\n            "Description": "Assess the emotional tone of the content",\n            "ExpectedOutput": "Sentiment analysis report",\n            "Agent": "SentimentAnalysisAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "Draft post",\n            "ContextFromSyncTasks": "none"\n        },\n        {\n            "CreateTask": "GenerateHashtags",\n            "Description": "Suggest relevant hashtags for the post",\n            "ExpectedOutput": "List of hashtags",\n            "Agent": "HashtagGeneratorAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "Draft post",\n            "ContextFromSyncTasks": "none"\n        },\n        {\n            "CreateTask": "AnalyzeContent",\n            "Description": "Evaluate the generated post for clarity and engagement",\n            "ExpectedOutput": "Content analysis report",\n            "Agent": "ContentAnalysisAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "Draft post, Hashtags",\n            "ContextFromSyncTasks": "none"\n        },\n        {\n            "CreateTask": "ReviewDraft",\n            "Description": "Facilitate user review of draft posts",\n            "ExpectedOutput": "User feedback on draft",\n            "Agent": "DraftReviewAgent",\n            "AsyncExecution": true,\n            "ContextFromAsyncTasks": "Content analysis report",\n            "ContextFromSyncTasks": "Draft post"\n        },\n        {\n            "CreateTask": "GenerateFinalOutput",\n            "Description": "Compile the approved draft and hashtags into a final post",\n            "ExpectedOutput": "Final post ready for publication",\n            "Agent": "FinalOutputAgent",\n            "AsyncExecution": false,\n            "ContextFromAsyncTasks": "User feedback",\n            "ContextFromSyncTasks": "Draft post"\n        },\n        {\n            "CreateTask": "MonitorPerformance",\n            "Description": "Track post engagement metrics",\n            "ExpectedOutput": "Performance report",\n            "Agent": "PerformanceMonitoringAgent",\n            "AsyncExecution": true,\n            "ContextFromAsyncTasks": "Final post",\n            "ContextFromSyncTasks": "none"\n        }\n    ]\n}\n```' additional_kwargs={'refusal': None} response_metadata={'token_usage': {'completion_tokens': 1722, 'prompt_tokens': 2190, 'total_tokens': 3912, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 1920}}, 'model_name': 'gpt-4o-mini-2024-07-18', 'system_fingerprint': 'fp_72ed7ab54c', 'finish_reason': 'stop', 'logprobs': None} id='run-450640e7-7d0c-4a2c-a6dc-b50253ba65ea-0' usage_metadata={'input_tokens': 2190, 'output_tokens': 1722, 'total_tokens': 3912, 'input_token_details': {'audio': 0, 'cache_read': 1920}, 'output_token_details': {'audio': 0, 'reasoning': 0}}
2025-02-10 20:44:01,459 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:normalize_json_input:717 - Attempting to parse JSON content: {
    "CrewCreationDetails": {
        "Name": "LinkedInPostGenerator",
        "Process": "sequence",
        "Agents": [
            "InputAnalysisAgent",
            "NLPAgent",
            "SentimentAnalysisAgent",
            "HashtagGeneratorAgent",
            "ContentAnalysisAgent",
            "DraftReviewAgent",
            "FinalOutputAgent",
            "PerformanceMonitoringAgent"
        ],
        "Tasks": [
            "AnalyzeInput",
            "GeneratePost",
            "AnalyzeSentiment",
            "GenerateHashtags",
            "AnalyzeContent",
            "ReviewDraft",
            "GenerateFinalOutput",
            "MonitorPerformance"
        ],
        "ManagerLLM": "GPT-4",
        "ManagerAgent": "AIManager",
        "Verbose": false,
        "Memory": "enabled",
        "Cache": "enabled",
        "Planning": "iterative",
        "MaxReqMin": 1000
    },
    "Tools": [],
    "Agents": [
        {
            "CreateAgent": "InputAnalysisAgent",
            "Role": "Analyze user input for content generation",
            "Backstory": "Experienced in data collection and user interaction",
            "Goal": "To gather and prepare data for post generation",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        },
        {
            "CreateAgent": "NLPAgent",
            "Role": "Generate coherent post drafts",
            "Backstory": "Specializes in natural language processing",
            "Goal": "To produce engaging and relevant post drafts",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.7,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomCodeInterpreterTool"
            ]
        },
        {
            "CreateAgent": "SentimentAnalysisAgent",
            "Role": "Analyze emotional tone of content",
            "Backstory": "Expert in sentiment analysis",
            "Goal": "Ensure alignment with user intent",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        },
        {
            "CreateAgent": "HashtagGeneratorAgent",
            "Role": "Suggest relevant hashtags",
            "Backstory": "Knowledgeable in social media trends",
            "Goal": "Enhance post visibility",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        },
        {
            "CreateAgent": "ContentAnalysisAgent",
            "Role": "Evaluate clarity and engagement of posts",
            "Backstory": "Skilled in content optimization",
            "Goal": "Refine the post for publishing",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomCodeInterpreterTool"
            ]
        },
        {
            "CreateAgent": "DraftReviewAgent",
            "Role": "Facilitate user review of draft posts",
            "Backstory": "Experienced in user feedback processes",
            "Goal": "Iterate on user feedback to improve drafts",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        },
        {
            "CreateAgent": "FinalOutputAgent",
            "Role": "Compile final post for publication",
            "Backstory": "Expert in content management",
            "Goal": "Ensure readiness of posts for LinkedIn",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        },
        {
            "CreateAgent": "PerformanceMonitoringAgent",
            "Role": "Track engagement metrics",
            "Backstory": "Analytical background in social media",
            "Goal": "Optimize future content strategies",
            "AllowDelegation": "yes",
            "Verbose": false,
            "Cache": "enabled",
            "LLM": "GPT-4",
            "Temperature": 0.5,
            "MaxIteration": 5,
            "SelectTools": [
                "CustomApiTool"
            ]
        }
    ],
    "Tasks": [
        {
            "CreateTask": "AnalyzeInput",
            "Description": "Collect and analyze user-provided data",
            "ExpectedOutput": "Processed user input for further use",
            "Agent": "InputAnalysisAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "none",
            "ContextFromSyncTasks": "none"
        },
        {
            "CreateTask": "GeneratePost",
            "Description": "Generate coherent post drafts",
            "ExpectedOutput": "Draft post ready for review",
            "Agent": "NLPAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "Processed user input",
            "ContextFromSyncTasks": "none"
        },
        {
            "CreateTask": "AnalyzeSentiment",
            "Description": "Assess the emotional tone of the content",
            "ExpectedOutput": "Sentiment analysis report",
            "Agent": "SentimentAnalysisAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "Draft post",
            "ContextFromSyncTasks": "none"
        },
        {
            "CreateTask": "GenerateHashtags",
            "Description": "Suggest relevant hashtags for the post",
            "ExpectedOutput": "List of hashtags",
            "Agent": "HashtagGeneratorAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "Draft post",
            "ContextFromSyncTasks": "none"
        },
        {
            "CreateTask": "AnalyzeContent",
            "Description": "Evaluate the generated post for clarity and engagement",
            "ExpectedOutput": "Content analysis report",
            "Agent": "ContentAnalysisAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "Draft post, Hashtags",
            "ContextFromSyncTasks": "none"
        },
        {
            "CreateTask": "ReviewDraft",
            "Description": "Facilitate user review of draft posts",
            "ExpectedOutput": "User feedback on draft",
            "Agent": "DraftReviewAgent",
            "AsyncExecution": true,
            "ContextFromAsyncTasks": "Content analysis report",
            "ContextFromSyncTasks": "Draft post"
        },
        {
            "CreateTask": "GenerateFinalOutput",
            "Description": "Compile the approved draft and hashtags into a final post",
            "ExpectedOutput": "Final post ready for publication",
            "Agent": "FinalOutputAgent",
            "AsyncExecution": false,
            "ContextFromAsyncTasks": "User feedback",
            "ContextFromSyncTasks": "Draft post"
        },
        {
            "CreateTask": "MonitorPerformance",
            "Description": "Track post engagement metrics",
            "ExpectedOutput": "Performance report",
            "Agent": "PerformanceMonitoringAgent",
            "AsyncExecution": true,
            "ContextFromAsyncTasks": "Final post",
            "ContextFromSyncTasks": "none"
        }
    ]
}
2025-02-10 20:44:01,459 - AICrewGenerator - [INFO] - ai_crew_generator.py:normalize_json_input:749 - Successfully normalized JSON format
2025-02-10 20:44:01,460 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:normalize_json_input:750 - Final normalized data: {
  "CrewCreationDetails": {
    "Name": "LinkedInPostGenerator",
    "Process": "sequence",
    "Agents": [
      "InputAnalysisAgent",
      "NLPAgent",
      "SentimentAnalysisAgent",
      "HashtagGeneratorAgent",
      "ContentAnalysisAgent",
      "DraftReviewAgent",
      "FinalOutputAgent",
      "PerformanceMonitoringAgent"
    ],
    "Tasks": [
      "AnalyzeInput",
      "GeneratePost",
      "AnalyzeSentiment",
      "GenerateHashtags",
      "AnalyzeContent",
      "ReviewDraft",
      "GenerateFinalOutput",
      "MonitorPerformance"
    ],
    "ManagerLLM": "GPT-4",
    "ManagerAgent": "AIManager",
    "Verbose": false,
    "Memory": "enabled",
    "Cache": "enabled",
    "Planning": "iterative",
    "MaxReqMin": 1000
  },
  "Tools": [],
  "Agents": [
    {
      "CreateAgent": "InputAnalysisAgent",
      "Role": "Analyze user input for content generation",
      "Backstory": "Experienced in data collection and user interaction",
      "Goal": "To gather and prepare data for post generation",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "NLPAgent",
      "Role": "Generate coherent post drafts",
      "Backstory": "Specializes in natural language processing",
      "Goal": "To produce engaging and relevant post drafts",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.7,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "CreateAgent": "SentimentAnalysisAgent",
      "Role": "Analyze emotional tone of content",
      "Backstory": "Expert in sentiment analysis",
      "Goal": "Ensure alignment with user intent",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "HashtagGeneratorAgent",
      "Role": "Suggest relevant hashtags",
      "Backstory": "Knowledgeable in social media trends",
      "Goal": "Enhance post visibility",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "ContentAnalysisAgent",
      "Role": "Evaluate clarity and engagement of posts",
      "Backstory": "Skilled in content optimization",
      "Goal": "Refine the post for publishing",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "CreateAgent": "DraftReviewAgent",
      "Role": "Facilitate user review of draft posts",
      "Backstory": "Experienced in user feedback processes",
      "Goal": "Iterate on user feedback to improve drafts",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "FinalOutputAgent",
      "Role": "Compile final post for publication",
      "Backstory": "Expert in content management",
      "Goal": "Ensure readiness of posts for LinkedIn",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "PerformanceMonitoringAgent",
      "Role": "Track engagement metrics",
      "Backstory": "Analytical background in social media",
      "Goal": "Optimize future content strategies",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    }
  ],
  "Tasks": [
    {
      "CreateTask": "AnalyzeInput",
      "Description": "Collect and analyze user-provided data",
      "ExpectedOutput": "Processed user input for further use",
      "Agent": "InputAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "none",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "GeneratePost",
      "Description": "Generate coherent post drafts",
      "ExpectedOutput": "Draft post ready for review",
      "Agent": "NLPAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Processed user input",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "AnalyzeSentiment",
      "Description": "Assess the emotional tone of the content",
      "ExpectedOutput": "Sentiment analysis report",
      "Agent": "SentimentAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "GenerateHashtags",
      "Description": "Suggest relevant hashtags for the post",
      "ExpectedOutput": "List of hashtags",
      "Agent": "HashtagGeneratorAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "AnalyzeContent",
      "Description": "Evaluate the generated post for clarity and engagement",
      "ExpectedOutput": "Content analysis report",
      "Agent": "ContentAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post, Hashtags",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "ReviewDraft",
      "Description": "Facilitate user review of draft posts",
      "ExpectedOutput": "User feedback on draft",
      "Agent": "DraftReviewAgent",
      "AsyncExecution": true,
      "ContextFromAsyncTasks": "Content analysis report",
      "ContextFromSyncTasks": "Draft post"
    },
    {
      "CreateTask": "GenerateFinalOutput",
      "Description": "Compile the approved draft and hashtags into a final post",
      "ExpectedOutput": "Final post ready for publication",
      "Agent": "FinalOutputAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "User feedback",
      "ContextFromSyncTasks": "Draft post"
    },
    {
      "CreateTask": "MonitorPerformance",
      "Description": "Track post engagement metrics",
      "ExpectedOutput": "Performance report",
      "Agent": "PerformanceMonitoringAgent",
      "AsyncExecution": true,
      "ContextFromAsyncTasks": "Final post",
      "ContextFromSyncTasks": "none"
    }
  ]
}
2025-02-10 20:44:01,460 - main - [DEBUG] - ai_crew_generator.py:main:851 - Normalized JSON: {
  "CrewCreationDetails": {
    "Name": "LinkedInPostGenerator",
    "Process": "sequence",
    "Agents": [
      "InputAnalysisAgent",
      "NLPAgent",
      "SentimentAnalysisAgent",
      "HashtagGeneratorAgent",
      "ContentAnalysisAgent",
      "DraftReviewAgent",
      "FinalOutputAgent",
      "PerformanceMonitoringAgent"
    ],
    "Tasks": [
      "AnalyzeInput",
      "GeneratePost",
      "AnalyzeSentiment",
      "GenerateHashtags",
      "AnalyzeContent",
      "ReviewDraft",
      "GenerateFinalOutput",
      "MonitorPerformance"
    ],
    "ManagerLLM": "GPT-4",
    "ManagerAgent": "AIManager",
    "Verbose": false,
    "Memory": "enabled",
    "Cache": "enabled",
    "Planning": "iterative",
    "MaxReqMin": 1000
  },
  "Tools": [],
  "Agents": [
    {
      "CreateAgent": "InputAnalysisAgent",
      "Role": "Analyze user input for content generation",
      "Backstory": "Experienced in data collection and user interaction",
      "Goal": "To gather and prepare data for post generation",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "NLPAgent",
      "Role": "Generate coherent post drafts",
      "Backstory": "Specializes in natural language processing",
      "Goal": "To produce engaging and relevant post drafts",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.7,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "CreateAgent": "SentimentAnalysisAgent",
      "Role": "Analyze emotional tone of content",
      "Backstory": "Expert in sentiment analysis",
      "Goal": "Ensure alignment with user intent",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "HashtagGeneratorAgent",
      "Role": "Suggest relevant hashtags",
      "Backstory": "Knowledgeable in social media trends",
      "Goal": "Enhance post visibility",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "ContentAnalysisAgent",
      "Role": "Evaluate clarity and engagement of posts",
      "Backstory": "Skilled in content optimization",
      "Goal": "Refine the post for publishing",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomCodeInterpreterTool"
      ]
    },
    {
      "CreateAgent": "DraftReviewAgent",
      "Role": "Facilitate user review of draft posts",
      "Backstory": "Experienced in user feedback processes",
      "Goal": "Iterate on user feedback to improve drafts",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "FinalOutputAgent",
      "Role": "Compile final post for publication",
      "Backstory": "Expert in content management",
      "Goal": "Ensure readiness of posts for LinkedIn",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    },
    {
      "CreateAgent": "PerformanceMonitoringAgent",
      "Role": "Track engagement metrics",
      "Backstory": "Analytical background in social media",
      "Goal": "Optimize future content strategies",
      "AllowDelegation": "yes",
      "Verbose": false,
      "Cache": "enabled",
      "LLM": "GPT-4",
      "Temperature": 0.5,
      "MaxIteration": 5,
      "SelectTools": [
        "CustomApiTool"
      ]
    }
  ],
  "Tasks": [
    {
      "CreateTask": "AnalyzeInput",
      "Description": "Collect and analyze user-provided data",
      "ExpectedOutput": "Processed user input for further use",
      "Agent": "InputAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "none",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "GeneratePost",
      "Description": "Generate coherent post drafts",
      "ExpectedOutput": "Draft post ready for review",
      "Agent": "NLPAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Processed user input",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "AnalyzeSentiment",
      "Description": "Assess the emotional tone of the content",
      "ExpectedOutput": "Sentiment analysis report",
      "Agent": "SentimentAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "GenerateHashtags",
      "Description": "Suggest relevant hashtags for the post",
      "ExpectedOutput": "List of hashtags",
      "Agent": "HashtagGeneratorAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "AnalyzeContent",
      "Description": "Evaluate the generated post for clarity and engagement",
      "ExpectedOutput": "Content analysis report",
      "Agent": "ContentAnalysisAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "Draft post, Hashtags",
      "ContextFromSyncTasks": "none"
    },
    {
      "CreateTask": "ReviewDraft",
      "Description": "Facilitate user review of draft posts",
      "ExpectedOutput": "User feedback on draft",
      "Agent": "DraftReviewAgent",
      "AsyncExecution": true,
      "ContextFromAsyncTasks": "Content analysis report",
      "ContextFromSyncTasks": "Draft post"
    },
    {
      "CreateTask": "GenerateFinalOutput",
      "Description": "Compile the approved draft and hashtags into a final post",
      "ExpectedOutput": "Final post ready for publication",
      "Agent": "FinalOutputAgent",
      "AsyncExecution": false,
      "ContextFromAsyncTasks": "User feedback",
      "ContextFromSyncTasks": "Draft post"
    },
    {
      "CreateTask": "MonitorPerformance",
      "Description": "Track post engagement metrics",
      "ExpectedOutput": "Performance report",
      "Agent": "PerformanceMonitoringAgent",
      "AsyncExecution": true,
      "ContextFromAsyncTasks": "Final post",
      "ContextFromSyncTasks": "none"
    }
  ]
}
2025-02-10 20:44:01,461 - main - [INFO] - ai_crew_generator.py:main:853 - Generating application...
2025-02-10 20:44:01,461 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:326 - Generating Streamlit app in directory: linkdin
2025-02-10 20:44:01,461 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:335 - Validating JSON structure
2025-02-10 20:44:01,461 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:353 - Using crew name: LinkedInPostGenerator
2025-02-10 20:44:01,461 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:364 - Generating application files
2025-02-10 20:44:01,461 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:generate_app:367 - Generating app.py
2025-02-10 20:44:01,461 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:_generate_app_content:409 - Generating app.py content
2025-02-10 20:44:01,462 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:372 - Created app.py: linkdin/app.py
2025-02-10 20:44:01,462 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:generate_app:375 - Creating .env file
2025-02-10 20:44:01,462 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:379 - Created .env file: linkdin/.env
2025-02-10 20:44:01,463 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:generate_app:382 - Creating requirements.txt
2025-02-10 20:44:01,463 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:386 - Created requirements.txt: linkdin/requirements.txt
2025-02-10 20:44:01,463 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:generate_app:389 - Creating run scripts
2025-02-10 20:44:01,463 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:_create_run_scripts:615 - Created run.sh: linkdin/run.sh
2025-02-10 20:44:01,463 - AICrewGenerator - [DEBUG] - ai_crew_generator.py:_create_run_scripts:624 - Created run.bat: linkdin/run.bat
2025-02-10 20:44:01,463 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:391 - Created run scripts
2025-02-10 20:44:01,463 - AICrewGenerator - [INFO] - ai_crew_generator.py:generate_app:401 - Successfully generated all application files
2025-02-10 20:44:01,463 - main - [INFO] - ai_crew_generator.py:main:856 - ==================================================
2025-02-10 20:44:01,463 - main - [INFO] - ai_crew_generator.py:main:857 - Successfully created Streamlit app in directory: linkdin
2025-02-10 20:44:01,463 - main - [INFO] - ai_crew_generator.py:main:858 - ==================================================
2025-02-10 20:44:01,464 - main - [INFO] - ai_crew_generator.py:main:866 - Generation process completed successfully
2025-02-10 20:44:01,805 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - close.started
2025-02-10 20:44:01,805 - httpcore.connection - [DEBUG] - _trace.py:trace:47 - close.complete
